basePath: /
definitions:
  controllers.CreatePaymentRequest:
    properties:
      orderid:
        type: integer
      paytypeid:
        type: integer
      sum:
        type: number
    type: object
  controllers.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      patronymic:
        type: string
      phone:
        type: string
      surname:
        type: string
    type: object
  models.Appuser:
    properties:
      clientId:
        type: integer
      empId:
        type: integer
      id:
        type: integer
      is_deleted:
        type: boolean
      isActive:
        type: boolean
      login:
        type: string
      password:
        type: string
    type: object
  models.Client:
    properties:
      email:
        type: string
      id:
        type: integer
      isDeleted:
        type: boolean
      name:
        type: string
      patronymic:
        type: string
      phonenumber:
        type: string
      surname:
        type: string
    type: object
  models.Document:
    properties:
      createDate:
        type: string
      endDate:
        type: string
      fileLink:
        type: string
      id:
        type: integer
      isSubmit:
        type: boolean
      loadEmpId:
        type: integer
      name:
        type: string
      number:
        type: string
      orderId:
        type: integer
      productId:
        type: integer
      startDate:
        type: string
      status:
        type: boolean
    type: object
  models.Employee:
    properties:
      email:
        type: string
      enddate:
        type: string
      id:
        type: integer
      jobpositionid:
        type: integer
      name:
        type: string
      number:
        type: string
      patronymic:
        type: string
      phonenumber:
        type: string
      photolink:
        type: string
      startdate:
        type: string
      surname:
        type: string
    type: object
  models.Order:
    properties:
      addressid:
        type: integer
      clientid:
        type: integer
      comment:
        type: string
      createdate:
        type: string
      delenddate:
        type: string
      delstartdate:
        type: string
      enddate:
        type: string
      id:
        type: integer
      isDeleted:
        type: boolean
      ispay:
        type: boolean
      name:
        type: string
      respempid:
        type: integer
      statusid:
        type: string
      sumorder:
        type: number
    type: object
  models.Payment:
    properties:
      date:
        type: string
      id:
        type: integer
      orderid:
        type: integer
      paytypeid:
        type: integer
      sum:
        type: number
    type: object
  models.Product:
    properties:
      calories:
        type: number
      carbohydrates:
        type: number
      categoryid:
        type: integer
      cost:
        type: number
      counttypepack:
        description: Packaged      int     `gorm:"column:packaged" json:"packaged"`
        type: integer
      description:
        type: string
      fats:
        type: number
      id:
        description: gorm.Model
        type: integer
      instore:
        description: OkeiId        int     `gorm:"column:okeiid" json:"okeiId"`
        type: boolean
      name:
        type: string
      photolink:
        type: string
      proteins:
        type: number
      unweight:
        type: number
      weight:
        type: integer
    type: object
  models.ProductInBasket:
    properties:
      clientid:
        type: integer
      count:
        type: integer
      productid:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API для онлайн-магазина кондитерских изделий
  title: Bakery App API
  version: "1.0"
paths:
  /basket:
    post:
      consumes:
      - application/json
      parameters:
      - description: Товар и количество для добавления
        in: body
        name: productInBasket
        required: true
        schema:
          $ref: '#/definitions/models.ProductInBasket'
      produces:
      - application/json
      responses:
        "200":
          description: товар добавлен в корзину
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: ошибка валидации
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Добавить товар в корзину клиента
      tags:
      - Basket
  /basket/{clientId}:
    get:
      parameters:
      - description: ID клиента
        in: path
        name: clientId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список товаров в корзине
          schema:
            items:
              $ref: '#/definitions/models.ProductInBasket'
            type: array
        "404":
          description: корзина не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Получить корзину клиента
      tags:
      - Basket
  /basket/{clientId}/{productId}:
    delete:
      parameters:
      - description: ID клиента
        in: path
        name: clientId
        required: true
        type: integer
      - description: ID товара
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: товар удален из корзины
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Удалить товар из корзины клиента
      tags:
      - Basket
  /clients:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Client'
            type: array
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить всех клиентов
      tags:
      - Client
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные клиента
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/models.Client'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: ошибка валидации
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: не удалось создать клиента
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать нового клиента
      tags:
      - Client
  /clients/{id}:
    delete:
      parameters:
      - description: ID клиента
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: клиент удалён
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: клиент не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить клиента
      tags:
      - Client
    get:
      parameters:
      - description: ID клиента
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "404":
          description: клиент не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить клиента по ID
      tags:
      - Client
    put:
      consumes:
      - application/json
      parameters:
      - description: ID клиента
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные клиента
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/models.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: ошибка валидации
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: клиент не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить данные клиента
      tags:
      - Client
  /documents:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить все документы
      tags:
      - Documents
    post:
      consumes:
      - application/json
      - application/json
      parameters:
      - description: Новый документ
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/models.Document'
      - description: Новый документ
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/models.Document'
      produces:
      - application/json
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать документ
      tags:
      - Documents
      - Documents
  /documents/{id}:
    delete:
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить документ
      tags:
      - Documents
    get:
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить документ по ID
      tags:
      - Documents
    put:
      consumes:
      - application/json
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённый документ
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/models.Document'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить документ по ID
      tags:
      - Documents
  /employees:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Employee'
            type: array
      security:
      - BearerAuth: []
      summary: Получить всех сотрудников
      tags:
      - Employees
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый сотрудник
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Employee'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать сотрудника
      tags:
      - Employees
  /employees/{id}:
    delete:
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить сотрудника
      tags:
      - Employees
    get:
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить сотрудника по ID
      tags:
      - Employees
    put:
      consumes:
      - application/json
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить сотрудника
      tags:
      - Employees
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные входа
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Авторизация пользователя
      tags:
      - Auth
  /orders:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Получить все заказы
      tags:
      - Orders
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый заказ
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: ошибка запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать заказ
      tags:
      - Orders
  /orders/{id}:
    delete:
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить заказ
      tags:
      - Orders
    get:
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить заказ по ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить заказ
      tags:
      - Orders
  /payments:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payment'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить все платежи
      tags:
      - Payments
    post:
      consumes:
      - application/json
      parameters:
      - description: Информация о платеже
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/controllers.CreatePaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Payment'
        "400":
          description: ошибка валидации или сумма меньше суммы заказа
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Провести оплату по заказу
      tags:
      - Payments
  /payments/order/{orderId}:
    get:
      parameters:
      - description: ID заказа
        in: path
        name: orderId
        required: true
        type: integer
      - description: ID заказа
        in: path
        name: orderId
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payment'
            type: array
        "403":
          description: доступ запрещен
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: платежи не найдены
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Получить платежи клиента по ID заказа
      tags:
      - Payments
      - Payments
  /products:
    get:
      consumes:
      - application/json
      description: Получить список продуктов
      produces:
      - application/json
      responses:
        "200":
          description: Список продуктов
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить список продуктов
      tags:
      - Products
  /products/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый продукт
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: access denied
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Добавить продукт (только для admin и manager)
      tags:
      - Products
  /products/{id}:
    delete:
      parameters:
      - description: ID продукта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удаление продукта
      tags:
      - Products
    get:
      parameters:
      - description: ID продукта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение продукта по ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      parameters:
      - description: ID продукта
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные продукта
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновление продукта
      tags:
      - Products
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для регистрации
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: user registered
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: ошибка валидации
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: не удалось создать пользователя
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация нового пользователя
      tags:
      - Auth
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Appuser'
            type: array
      security:
      - BearerAuth: []
      summary: Получить всех пользователей (кроме удалённых)
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Appuser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Appuser'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать пользователя
      tags:
      - Users
  /users/{id}:
    delete:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить пользователя
      tags:
      - Users
    get:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Appuser'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить пользователя по ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Appuser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Appuser'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить пользователя
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
