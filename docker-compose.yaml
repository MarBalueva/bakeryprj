version: '3.8'

services:
  app1:
    build: .
    ports:
      - "8080"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=1
      - DB_NAME=bakery
    volumes:
      - ./logs/app1:/app/logs

  app2:
    build: .
    ports:
      - "8081"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=1
      - DB_NAME=bakery
    volumes:
      - ./logs/app2:/app/logs

  app3:
    build: .
    ports:
      - "8082"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=1
      - DB_NAME=bakery
    volumes:
      - ./logs/app3:/app/logs

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: bakery
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - ./initdb/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app1
      - app2
      - app3

volumes:
  pgdata:
